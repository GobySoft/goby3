syntax = "proto2";
import "goby/middleware/protobuf/app_config.proto";
import "goby/protobuf/option_extensions.proto";

package goby.apps.middleware.protobuf;

message ProtobufToolConfig
{
    option (goby.msg).cfg.tool = {
        is_tool: true
        has_subtools: true
        has_help_action: true
    };

    optional goby.middleware.protobuf.AppConfig app = 1
        [(goby.field) = { cfg { action: DEVELOPER } }];

    enum Action
    {
        help = 0 [(goby.ev).cfg = {
            short_help_msg: "Print usage information",
            full_help_msg: "Usage: \"goby protobuf help [action]\""
        }];
        show = 1 [(goby.ev).cfg = {
            short_help_msg: "Display definition for message",
        }];
    }
    optional Action action = 2 [
        default = help,
        (goby.field) = {
            description: "The action this tool should take [can omit --action if 1st parameter]",
            cfg { position: { enable: true }, cli_short: "A", action: HIDDEN }
        }
    ];
}

message ProtobufShowToolConfig
{
    option (goby.msg).cfg.tool = {
        is_tool: true
        has_subtools: false
        has_help_action: false
    };

    optional goby.middleware.protobuf.AppConfig app = 1
        [(goby.field) = { cfg { action: DEVELOPER } }];

    required string name = 2 [(goby.field) = {
        description: "Protobuf name for message to show.",
        cfg { position: { enable: true }, cli_short: "n" }
    }];

    repeated string load_shared_library = 10 [(goby.field) = {
        description: "Load this shared library containing compiled Protobuf/DCCL messages.",
        cfg { cli_short: "l" }
    }];
}
