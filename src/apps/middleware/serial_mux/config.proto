syntax = "proto2";

import "goby/protobuf/option_extensions.proto";

import "goby/middleware/protobuf/app_config.proto";
import "goby/middleware/protobuf/serial_config.proto";
import "goby/middleware/protobuf/pty_config.proto";

package goby.apps.middleware.protobuf;

message SerialMuxConfig
{
    optional goby.middleware.protobuf.AppConfig app = 1;
    required goby.middleware.protobuf.SerialConfig primary_serial = 2
        [(goby.field).description =
             "Primary serial port to multiplex. This is typically a real "
             "serial port (but could connect to a pty)"];

    message SecondaryPTY
    {
        required goby.middleware.protobuf.PTYConfig pty = 1
            [(goby.field).description = "Pseudoterminal (PTY) to create"];
        optional bool allow_write = 2 [
            default = true,
            (goby.field).description =
                "If true, sends data written to the PTY to the primary serial "
                "port. If false, writes are discarded."
        ];
    }

    repeated SecondaryPTY secondary = 3
        [(goby.field).description =
             "Multiple secondary pseudoterminals (PTYs) to create. Each PTY "
             "will receive a copy of all data read from the primary serial "
             "port. All data written to PTYs where 'allow_write = true' will "
             "be multiplexed and sent out the primary serial port."];
}
