syntax = "proto2";

import "dccl/option_extensions.proto";
import "goby/acomms/protobuf/buffer.proto";

package goby.middleware.protobuf;

message InterVehicleTransporterConfig
{
    optional goby.acomms.protobuf.DynamicBufferConfig buffer = 1;

    message LinkConfig
    {
        enum LinkPolicy
        {
            // send to all links (until one acknowledges)
            LINK_POLICY_FLOOD_ALL = 1;

            // try the highest priority link for some period of time, then
            // try the next LINK_POLICY_PRIORITY_TIMEOUT = 2;
        }
        optional LinkPolicy policy = 1;
    }

    optional LinkConfig link = 2;
}

message TransporterConfig
{
    // if the publisher is also subscribed, should it receive a copy?
    // TODO: implement at the interprocess and intervehicle layers
    optional bool echo = 1 [default = false];

    optional InterVehicleTransporterConfig intervehicle = 10;
}
