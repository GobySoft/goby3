syntax = "proto2";

import "dccl/option_extensions.proto";

package goby.middleware.protobuf;

message HealthRequest
{
}

enum HealthState
{
    HEALTH__OK = 1;
    HEALTH__DEGRADED = 2;
    HEALTH__FAILED = 3;
}

enum Error
{
    ERROR__PROCESS_DIED = 1;
}

message ThreadHealth
{
    required string name = 1;
    optional string thread_id = 2;
    required HealthState state = 10;
    repeated ThreadHealth child = 11;
    optional Error error = 20;
    optional string error_message = 21;

    extensions 1000 to max;
}

message ProcessHealth
{
    required string name = 1;
    optional uint32 pid = 2;

    required ThreadHealth main = 10;
}

message VehicleHealth
{
    option (dccl.msg).unit_system = "si";

    required uint64 time = 1 [(dccl.field).units = {prefix: "micro" base_dimensions: "T"}];
    required string platform = 2;

    required HealthState state = 10;
    repeated ProcessHealth process = 11;
}
