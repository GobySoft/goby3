syntax = "proto2";
import "goby/protobuf/option_extensions.proto";
import "dccl/option_extensions.proto";

package goby.middleware.protobuf;

message TCPServerConfig
{
    option (dccl.msg) = {
        unit_system: "si"
    };

    required uint32 bind_port = 2
        [(goby.field) = {description: "TCP Port to bind on" example: "50000"}];

    optional string end_of_line = 3 [
        default = "\n",
        (goby.field) = {
            description: "End of line string. Can also be a std::regex"
        }
    ];

    optional bool set_reuseaddr = 10 [default = false];
}

message TCPClientConfig
{
    option (dccl.msg) = {
        unit_system: "si"
    };

    optional string end_of_line = 3 [
        default = "\n",
        (goby.field) = {
            description: "End of line string. Can also be a std::regex"
        }
    ];

    required string remote_address = 5 [(goby.field) = {
        description: "Remote address to transfer data to"
        example: "192.168.1.1"
    }];
    required uint32 remote_port = 6 [(goby.field) = {
        description: "TCP port for remote endpoint"
        example: "50001"
    }];
}
