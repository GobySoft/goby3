syntax = "proto2";
import "goby/protobuf/option_extensions.proto";
import "dccl/option_extensions.proto";

package goby.middleware.protobuf;

message UDPEndPoint
{
    required string addr = 1;
    required uint32 port = 2;
}

message TCPEndPoint
{
    optional string addr = 1;
    optional uint32 port = 2;
    optional bool all_clients = 3 [default = false];
}

message IOData
{
    optional int32 index = 1 [default = -1];

    oneof src
    {
        UDPEndPoint udp_src = 10;
        TCPEndPoint tcp_src = 11;
    }

    oneof dest
    {
        UDPEndPoint udp_dest = 20;
        TCPEndPoint tcp_dest = 21;
    }

    optional bytes data = 30;
}

message SerialCommand
{
    enum Command
    {
        SEND_BREAK = 1;
        RTS_HIGH = 2;
        RTS_LOW = 3;
    }
    required Command command = 1;
}

message TCPServerEvent
{
    enum Event
    {
        EVENT_CONNECT = 1;
        EVENT_DISCONNECT = 2;
    }
    required Event event = 1;
    optional TCPEndPoint client_endpoint = 2;
    optional int32 number_of_clients = 3;
}

enum IOState
{
    IO__STATE_UNKNOWN = -1;
    IO__LINK_OPEN = 1;
    IO__LINK_CLOSED = 2;
    IO__CRITICAL_FAILURE = 3;
}

message IOError
{
    enum ErrorCode
    {
        IO__INIT_FAILURE = 1;
        IO__READ_FAILURE = 2;
        IO__WRITE_FAILURE = 3;
        IO__DATA_TIMEOUT = 4;
    }
    required ErrorCode code = 1;
    optional string text = 2;
}

message IOStatus
{
    required IOState state = 1;
    optional IOError error = 2;
}
