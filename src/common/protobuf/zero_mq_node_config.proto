import "goby/common/protobuf/option_extensions.proto";

package goby.common.protobuf;

message ZeroMQServiceConfig
{
    message Socket
    {
        enum SocketType
        {
            PUBLISH = 1;
            SUBSCRIBE = 2;
            REPLY = 3;
            REQUEST = 4;
            // PUSH = 5;
            // PULL = 6;
            // DEALER = 7;
            // ROUTER = 8;
        }
        enum Transport
        {
            INPROC = 1;  // intraprocess - interthread communication
            IPC = 2;     // interprocess - uses Unix Sockets
            TCP = 3;
            PGM = 4;   // reliable multicast
            EPGM = 5;  // encapsulated PGM over UDP
        }
        enum ConnectOrBind
        {
            CONNECT = 1;
            BIND = 2;
        }
        required SocketType socket_type = 1;
        optional uint32 socket_id = 2 [
            default = 0,
            (goby.field).description =
                "defines a socket or group of sockets that are send and "
                "receive together. Sockets with the same id that are must be "
                "compatible (generally have the same SocketType)"
        ];
        optional Transport transport = 3 [default = EPGM];
        optional ConnectOrBind connect_or_bind = 4 [default = CONNECT];

        // required for TCP, PGM, EPGM
        optional string ethernet_address = 5 [
            default = "127.0.0.1",
            (goby.field).description =
                "primary IP address of the interface to use"
        ];
        optional string multicast_address = 6 [
            default = "239.255.7.15",
            (goby.field).description =
                "only required if `transport`=PGM or EPGM; multicast IP "
                "address to use; 239.252.0.0-239.255.255.255 is recommended "
                "(site-local). See also "
                "http://www.iana.org/assignments/multicast-addresses/"
                "multicast-addresses.ml"
        ];
        optional uint32 ethernet_port = 7 [default = 11142];

        // required for INPROC, IPC
        optional string socket_name = 8;

        optional uint32 send_queue_size = 10 [default = 1000];
        optional uint32 receive_queue_size = 11 [default = 1000];
    }

    repeated Socket socket = 1;
}
