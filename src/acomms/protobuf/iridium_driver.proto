syntax = "proto2";
import "goby/protobuf/option_extensions.proto";
import "goby/acomms/protobuf/driver_base.proto";
import "goby/acomms/protobuf/modem_message.proto";
import "dccl/option_extensions.proto";

package goby.acomms.iridium.protobuf;

message Config
{
    message Remote
    {
        required string iridium_number = 1;
        required int32 modem_id = 2;
    }

    optional Remote remote = 1;
    optional uint32 max_frame_size = 2 [default = 1500];
    optional int32 target_bit_rate = 3 [default = 2400];
    repeated string config = 4;
    optional int32 dial_attempts = 5 [default = 3];
    optional int32 debug_client_port = 6;

    optional int32 hangup_seconds_after_empty = 8 [default = 30];
    optional int32 start_timeout = 9 [default = 20];
    optional bool use_dtr = 10 [default = false];
    optional int32 handshake_hangup_seconds = 12 [default = 5];
}

extend goby.acomms.protobuf.DriverConfig
{
    optional Config config = 1381;
}

message Transmission
{
    optional bool if_no_data_do_mailbox_check = 1 [default = true];
}

extend goby.acomms.protobuf.ModemTransmission
{
    optional Transmission transmission = 1381;
}

// subset of goby.acomms.protobuf.ModemTransmission
message IridiumHeader
{
    option (dccl.msg).id = 0;
    option (dccl.msg).max_bytes = 7;
    option (dccl.msg).codec_version = 3;

    required int32 src = 1 [(dccl.field).min = 0, (dccl.field).max = 30];

    required int32 dest = 2 [(dccl.field).min = 0, (dccl.field).max = 30];

    optional int32 rate = 3 [(dccl.field).min = 0, (dccl.field).max = 1];

    required goby.acomms.protobuf.ModemTransmission.TransmissionType type = 4;

    optional bool ack_requested = 5;
    optional uint32 frame_start = 6
        [(dccl.field).min = 0, (dccl.field).max = 0xFFFF];
    optional int32 acked_frame = 7
        [(dccl.field).min = 0, (dccl.field).max = 0xFFFF];
}
