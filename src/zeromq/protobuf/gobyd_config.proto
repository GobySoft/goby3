syntax = "proto2";
import "goby/protobuf/option_extensions.proto";
import "goby/middleware/protobuf/app_config.proto";
import "goby/zeromq/protobuf/interprocess_config.proto";
import "goby/middleware/protobuf/intervehicle.proto";

package goby.apps.zeromq.protobuf;

message GobyDaemonConfig
{
    optional goby.middleware.protobuf.AppConfig app = 1;
    optional int32 router_threads = 2 [default = 10];
    optional goby.zeromq.protobuf.InterProcessPortalConfig interprocess = 3
        [(goby.field) = { cfg { env: "GOBY_INTERPROCESS" } }];

    optional goby.middleware.intervehicle.protobuf.PortalConfig intervehicle =
        4;

    optional goby.zeromq.protobuf.InterProcessManagerHold hold = 10;
}

// standalone intervehicle portal (if running separate apps: gobyd for
// interprocess and goby_intervehicle_portal for intervehicle comms)
message GobyIntervehiclePortalConfig
{
    optional goby.middleware.protobuf.AppConfig app = 1;
    optional goby.zeromq.protobuf.InterProcessPortalConfig interprocess = 2
            [(goby.field) = { cfg { env: "GOBY_INTERPROCESS" } }];

    required goby.middleware.intervehicle.protobuf.PortalConfig intervehicle =
        3;
}
