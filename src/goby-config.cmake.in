if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/goby_core-config.cmake)
  include(${CMAKE_CURRENT_LIST_DIR}/goby_core-config.cmake)
  set(GOBY_FOUND 1)
else()
  set(GOBY_FOUND 0)
endif()

set(zeromq_built @build_zeromq@)
if(zeromq_built)
  # moos requires zeromq for goby_moos_gateway if built
  if("moos" IN_LIST GOBY_FIND_COMPONENTS)
    list(INSERT GOBY_FIND_COMPONENTS 0 "zeromq")
  endif()
endif()

foreach(component ${GOBY_FIND_COMPONENTS})
  if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/goby_${component}-config.cmake)
    include(${CMAKE_CURRENT_LIST_DIR}/goby_${component}-config.cmake)
    set(GOBY_${component}_FOUND 1)
    list(APPEND GOBY_COMPONENTS_FOUND ${component})
  else()
    set(GOBY_${component}_FOUND 0)
    if(GOBY_FIND_REQUIRED_${component})
      message(FATAL_ERROR "goby_${component} is not available.")
    endif()
  endif()
endforeach()

include(CMakeFindDependencyMacro)

if(${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.9)
find_dependency(Boost 1.58.0 COMPONENTS system date_time program_options filesystem)
find_dependency(DCCL)
# Todo - install these Find scripts for use by downstream projects
#find_dependency(Proj)
#find_dependency(ProtobufGoby)
endif()

get_target_property(GOBY_INCLUDE_DIR goby INTERFACE_INCLUDE_DIRECTORIES)

# goby_clang_tool interfaces files
get_filename_component(GOBY_INTERFACES_DIR ${GOBY_INCLUDE_DIR}/../share/goby/interfaces ABSOLUTE)
if(NOT EXISTS ${GOBY_INTERFACES_DIR})
  unset(GOBY_INTERFACES_DIR)
endif()
  
message(STATUS "Found the following Goby libraries:")
message(STATUS "   goby")
foreach(component ${GOBY_COMPONENTS_FOUND})
  message(STATUS "   goby_${component}")
endforeach()

message(STATUS "Goby headers in ${GOBY_INCLUDE_DIR}")

if(GOBY_INTERFACES_DIR)
  message (STATUS "Goby interfaces in ${GOBY_INTERFACES_DIR}")
endif()
