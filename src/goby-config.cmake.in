if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/goby_core-config.cmake)
  include(${CMAKE_CURRENT_LIST_DIR}/goby_core-config.cmake)
  set(GOBY_FOUND 1)
else()
  set(GOBY_FOUND 0)
endif()

set(zeromq_built @build_zeromq@)
if(zeromq_built)
  # moos requires zeromq for goby_moos_gateway if built
  if("moos" IN_LIST GOBY_FIND_COMPONENTS)
    list(INSERT GOBY_FIND_COMPONENTS 0 "zeromq")
  endif()
endif()

foreach(component ${GOBY_FIND_COMPONENTS})
  if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/goby_${component}-config.cmake)
    include(${CMAKE_CURRENT_LIST_DIR}/goby_${component}-config.cmake)
    set(GOBY_${component}_FOUND 1)
    list(APPEND GOBY_COMPONENTS_FOUND ${component})
  else()
    set(GOBY_${component}_FOUND 0)
    if(GOBY_FIND_REQUIRED_${component})
      message(FATAL_ERROR "goby_${component} is not available.")
    endif()
  endif()
endforeach()

get_target_property(GOBY_INCLUDE_DIR goby INTERFACE_INCLUDE_DIRECTORIES)
message(STATUS "Found the following Goby libraries (headers in ${GOBY_INCLUDE_DIR}):")
message(STATUS "   goby")
foreach(component ${GOBY_COMPONENTS_FOUND})
  message(STATUS "   goby_${component}")
endforeach()

