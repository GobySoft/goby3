syntax = "proto2";
import "goby/acomms/protobuf/driver_base.proto";
import "goby/acomms/protobuf/modem_message.proto";
import "dccl/option_extensions.proto";

package goby.moos.ufld.protobuf;

message MicroModemMimic
{
    optional string range_request_var = 1 [default = "CRS_RANGE_REQUEST"];
    optional string range_report_var = 2 [default = "CRS_RANGE_REPORT"];
}

message Config
{
    optional string moos_server = 1 [default = "localhost"];
    optional int32 moos_port = 2 [default = 9000];

    optional string incoming_moos_var = 3 [default = "ACOMMS_UFIELD_DRIVER_IN"];
    optional string outgoing_moos_var = 4
        [default = "ACOMMS_UFIELD_DRIVER_OUT"];

    optional string ufield_outgoing_moos_var = 5
        [default = "NODE_MESSAGE_LOCAL"];

    repeated int32 rate_to_bytes = 6;

    optional string modem_id_lookup_path = 7;

    optional MicroModemMimic micromodem_mimic = 8;

    // repeated ModemIdEntry id_entry = 9;
}

extend goby.acomms.protobuf.DriverConfig
{
    optional Config config = 1300;
}

enum TransmissionType
{
    BASE_TYPE = 0;
    UFIELD_DRIVER_POLL = 1;
}

message Transmission
{
    optional TransmissionType type = 1 [default = BASE_TYPE];

    // used in UFIELD_DRIVER_POLL message
    optional int32 poll_src = 2 [(dccl.field).omit = true];
    optional int32 poll_dest = 3 [(dccl.field).omit = true];
}

extend goby.acomms.protobuf.ModemTransmission
{
    optional Transmission transmission = 1300;
};
