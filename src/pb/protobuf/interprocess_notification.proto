import "google/protobuf/descriptor.proto";

package goby.common.protobuf;

// used to filter messages on their contents
// instead of just type
message Filter
{
    required string key = 1;
    enum Operation
    {
        EQUAL = 1;      // key == value
        NOT_EQUAL = 2;  // key != value
    }
    required Operation operation = 2;
    required string value = 3;
}

// encoded message payload
// can carry any protobuf message
message EmbeddedMessage
{
    // encoded google protobuf message
    // optional if request is for subscription
    optional bytes body = 1;
    // type [Descriptor::full_name()]
    required string type = 2;
    // only required if desired for initial subscription
    optional Filter filter = 3;
}

// message Notification
// {
//   enum NotificationType
//   {
//     HEARTBEAT = 1;
//     CONNECT_REQUEST = 2;
//     DISCONNECT_REQUEST = 3;
//     CONNECTION_ACCEPTED = 4;
//     CONNECTION_DENIED = 5;
//     PUBLISH_REQUEST = 6;
//     SUBSCRIBE_REQUEST = 7;
//   }
//   required NotificationType notification_type = 1;

//   // required for connection only
//   optional string application_name = 2;

//   // used to inform gobyd of the google protobuf type used for a
//   // given publish or subscribe request
//   repeated .google.protobuf.FileDescriptorProto file_descriptor_proto = 3;

//   // information about the payload
//   optional EmbeddedMessage embedded_msg = 4;

//   // human readable explanation of this message (usually
//   // used to report error reasoning)
//   optional string explanation = 5;
// }
