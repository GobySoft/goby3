#!/bin/bash
# Dependencies installation script for Goby
#
# At a minimum, Goby can be built in a C++ development environment 
# that also includes Google Protocol Buffers (http://code.google.com/p/protobuf/)
# and Boost (http://www.boost.org/). Both of these will readily compile on most
# embedded systems. The other dependencies add useful functionality.
function usage()
{
    echo "usage: ./DEPENDENCIES distribution [ALL] [DOC]";
    echo "";
    echo "distribution can be:";
    echo "debian"
    echo "ubuntu"
    echo "fedora"
    echo "opensuse"
    echo;
    echo "Other distributions should determine their dependencies"
    echo "by reading this file (less DEPENDENCIES). Please improve this script"
    echo "by adding your distribution."

    echo "option ALL installs all optional code dependencies";
    echo "option DOC installs all dependencies for generating documentation (doxygen, latex, etc.)";
}

if [ $# -lt 1 ]; then usage; exit 1; fi;
if [[ $UID -ne 0 ]]; then printf "You must run this script as root. Use 'sudo' in Ubuntu. \n" 1>&2; exit 1; fi


echo "Installing dependencies for $1 ...";
install_doc=0; if [[ $2 == "DOC" || $3 == "DOC" ]]; then install_doc=1; fi;
if [ $install_doc -ne 0 ]; then echo "Installing documentation dependencies ..."; fi
install_all=0; if [[ $2 == "ALL" || $3 == "ALL" ]]; then install_all=1; fi;
if [ $install_all -ne 0 ]; then echo "Installing all dependencies ..."; fi

set -u -e 

case $1 in
ubuntu|debian)
        # additionally, debian will require:
        # DCCL3 from source: http://libdccl.org

        if [[ -e "`which aptitude`" ]]; then
            package_manager=aptitude
        else
            package_manager=apt-get
        fi
        
        install_command="install"

        packages="build-essential
            cmake
            libboost-dev
            libboost-system-dev
            libboost-date-time-dev
            libboost-thread-dev
            libboost-program-options-dev
            libboost-filesystem-dev
            libboost-signals-dev
            libboost-regex-dev
            libprotobuf-dev
            libprotoc-dev
            protobuf-compiler
            libgmp3-dev"
        if [ $install_all -ne 0 ]; then 
            packages="${packages}
            libcrypto++-dev
            libncurses-dev
            libzmq-dev
            libwt-dev
            libwtdbo-dev
            libwtdbosqlite-dev
            libwthttp-dev
            libsqlite3-dev"
        fi

        if [[ $1 == "ubuntu" ]]; then
            add-apt-repository ppa:dccl-dev/ppa -s -y
            apt-get update -qq
            set +x
            packages="${packages} 
            libdccl3-dev"
        fi
        
        if [ $install_doc -ne 0 ]; then 
            packages="${packages} 
            graphviz
            doxygen
            texlive-xetex
            ttf-sil-gentium
            imagemagick
            texlive-fonts-recommended
            texlive-font-utils
            ghostscript
            lmodern
            texlive-latex-recommended
            texlive-latex-extra"
        fi
       
        # PPA dependencies
        if [[ $1 == "ubuntu" &&  $install_all -ne 0 ]]; then 
            set -x
            add-apt-repository ppa:goby-dev/ppa -s -y 
            add-apt-repository ppa:tes/lamss-moos10 -s -y
            apt-get update -qq
            set +x

            # override and use build-dep if ALL and DOC are requested
            if [ $install_doc -ne 0 ]; then
                package_manager="apt-get"
                install_command="build-dep"
                packages="libgoby2"
            else
                packages="${packages} 
            libmoos10-dev
            libproj-dev"
            fi
        fi
        ;;
fedora)
        package_manager=yum
        install_command="install"
        packages="cmake
            protobuf-devel
            boost-devel"

        if [[ $install_all -ne 0 || $install_doc -ne 0 ]]; then 
            echo "Warning: ALL and DOC are not yet supported for $1"
        fi
        ;; 
opensuse)
        package_manager=zypper
        install_command="install"
        packages="make gcc gcc-c++
            protobuf-devel
            boost-devel"

        if [[ $install_all -ne 0 || $install_doc -ne 0 ]]; then 
            echo "Warning: ALL and DOC are not yet supported for $1"
        fi

        ;; 
*)
   echo -e "Invalid distribution: $1\n"; usage; exit 1;;
esac

echo "Installing: ${packages}..."

set -x

${package_manager} ${install_command} ${packages}


# Fedora notes
# - base
# yum install cmake
# yum install protobuf-devel
# yum install boost-devel

# OpenSuSe Notes
# - base
# zypper install -t pattern devel_C_C++
# zypper install cmake
# zypper install boost-devel
# zypper install protobuf-devel
# - optional
# zypper install libxerces-c-devel
# (crypto++ from src)
# zypper install wt-devel



# MAC OS X
# Use MacPorts to install the needed dependencies. You will have 
# to install Wt from source to /opt/local 
# I believe these are the ports necessary to compile moos-ivp,
# moos-ivp-local, and goby:
# 
# - base
# boost +universal
# protobuf-cpp
# cmake
# - optional
# jpeg +universal
# libcryptopp +universal
# ncurses +universal
# ncursesw
# socat
# tiff +universal
# xercesc
# zlib +universal


# Windows
# Goby does not currently build on Windows
